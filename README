##########################################
# README file for details of burst ToA 
# offset estimation experiment.
#
#  ~Raghav Wani, August 2025
##########################################

# Test Directories:
19July2025
TST2_1Aug2025
8Aug2025

# Details of essential codes:
# All codes are in 'scripts' directory
make_pc_beam.py --> Python script developed by Arpan to make PC beam from visibility raw data. It stores PC beam data in dat file.
	Usage: python3 make_pc_beam.py -f Visi-R*.raw --freq-start 550e6 --freq-end 750e6 --channels 4096 --output 30ant.dat --antmask 0x3ffff fff --no-bandpass --no-baseline
dat_to_beam.py --> Python script to convert dat file generated by make_pc_beam.py into a filterbank file.
	Usage: python dat_to_beam.py , then enter input details
presto_timeseries.py --> Python script to plot de-dispersed timeseries from dat file and estimate burst toa offset, for comparing visibility and beam data
	Usage: python presto_timeseries.py , then enter input details
gwb_vs_splt_presto_timeseries.py --> Python script to plot de-dispersed timeseries from dat file and estimate burst toa offset, mainly for comparing burst profiles from GWB with SPOTLIGHT beam data.
	Usage: python gwb_vs_splt_presto_timeseries.py , then enter input details

# *ant.dat is a binary file and written as: 
Header (44 bytes): 5 doubles (freq_start, freq_end, channel_width, integration_time, processing_timestamp) + 1 integer (channels), followed by 
Data Records: where each record contains an 8-byte timestamp (double, Unix time with microsecond precision) followed by 4096 × 4 bytes of beam power data (32-bit floats, little-endian). Each record represents 1.31072 ms of integrated beam data across all frequency channels (550-750 MHz, 4096 channels) with timestamps in chronological order reflecting the time-multiplexed structure of the 16 input files.

# Make raw from filterbank
$ dd if=BM24.fil of=BM24.hdr bs=1 count=345 # Makes header file from filterbank
$ dd if=BM24.fil of=BM24.raw bs=1M skip=345 iflag=skip_bytes  # Makes raw from filterbank

# Re-scaling the raw data:
$ read_PAbeam.8bit.PC_beam.noscale.offset <input data file name> <output file name><observation duration in seconds><Frequency channel><input time resolution in sec><integration factor for PA beam><scaling factor>

eg. read_PAbeam.8bit.PC_beam.noscale.offset BM7.raw BM7_offset64.raw 550 4096 0.00131072 1 64

# Making filterbank after re-scaling 
$ cat BM7.hdr BM7_offset64.raw > BM7_offset64.fil

# Visibility data block:
 – one block of visi: 400 * 1024 *1024 = 419430400
1/400 (i.e 1/400 MHz) = .00250000000000000000 micro sec - time resolution
. * 419430400
1048576.00000000000000000000 - visi recording in microseconds
= 1.04857600000000000000 secs

